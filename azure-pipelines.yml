trigger:
  - master

resources:
  repositories:
    - repository: templates
      type: git
      name: TAS/azdo-pipeline-templates
      ref: refs/heads/master

name: 1.0.$(Rev:r)

variables:
  agentPool: "Rabo-Build-Azure-Windows"
  vstsFeed: 'ea1adc59-f67e-40d5-8539-4c897a894647'
  configuration: Release
  token: $(PAT)
  code: $(functionsMasterKey)
  secret: $(clientSecret)
  key: $(logAnalyticsWorkspaceKey)
  fortifyServiceEndPoint: "Fortify SSC TAS"
  fortifyApplicationName: "TAS.SecurePipelineScanner"
  nexusIQServiceEndPoint: "Nexus IQ - Production"
  nexusIQApplicationId: "azdo-compliancy-rules"
  sonarQubeEndpoint: "SonarQube Production On Prem - with token"
  sonarQubeProjectKey: "TAS.SecurePipelineScanner"
  sonarQubeProjectName: "TAS.SecurePipelineScanner"

jobs:
- template: /jobs/test-job.yml@templates
  parameters:
    agentPool: $(agentPool)
    env:
      token: $(token)
      code: $(code)
      clientSecret: $(secret)
      key: $(key)
- template: /jobs/static-analysis-job.yml@templates
  parameters:
    fortifyServiceEndPoint: $(fortifyServiceEndPoint)
    fortifyApplicationName: $(fortifyApplicationName)
    nexusIQServiceEndPoint: $(nexusIQServiceEndPoint)
    nexusIQApplicationId: $(nexusIQApplicationId)
    sonarQubeEndpoint: $(sonarQubeEndpoint)
    sonarQubeProjectKey: $(sonarQubeProjectKey)
    sonarQubeProjectName: $(sonarQubeProjectName)
    sonarBuildSteps:
      - template: /steps/dotnet-test-step.yml@templates
        parameters:
          env:
            token: $(token)
            code: $(code)
            clientSecret: $(secret)
            key: $(key)
            
- template: /jobs/publish-package-job.yml@templates
  parameters:
    vstsFeed: $(vstsFeed)
    ${{ if eq(variables['Build.SourceBranchName'], 'master') }}:
      packageVersion: $(Build.BuildNumber)
    ${{ if ne(variables['Build.SourceBranchName'], 'master') }}:
      packageVersion: $(Build.BuildNumber)-rc
